/**
 * @file SedIntegration_test.cpp
 *
 * Created on: Sep 16, 2013
 *     Author: Pierre Dubath
 */

#include <iostream>
#include <cmath>
#include <map>
#include <iomanip>
#include <vector>
#include <boost/test/unit_test.hpp>
#include <boost/filesystem/path.hpp>

//#include "ChDataModel/Source.h"
#include "ChDataModel/Enumerations/FilterTypes.h"
#include "ChDataHandling/AsciiFilterImporter.h"
#include "ChDataHandling/AsciiSedImporter.h"

#include "Faros/SedIntegration.h"


namespace fs = boost::filesystem;

using namespace ChDataModel;
using namespace std;

//-----------------------------------------------------------------------------

struct SedIntegrationFix {

  char* strPath;
  std::string alexandriaPath{};

  SedIntegration*       sed_integration_ptr = nullptr;
  AsciiFilterImporter*  inputFilter         = nullptr;
  AsciiSedImporter*     inputSed            = nullptr;

  FilterTypes           filterType{};


  double tolerence{};

  SedIntegrationFix() {

    // Get Alexandria path
    strPath = getenv("ALEXANDRIA_PROJECT_ROOT");
    alexandriaPath = "";
    if (strPath != NULL)
    {
      alexandriaPath = std::string(strPath);
    }
    else
    {
      cout << "ERROR : <ALEXANDRIA_PROJECT_ROOT> environment variable is empty!!!"<<endl;
    }

    // setup
    sed_integration_ptr = new SedIntegration(InterpolationMethod::CUBIC);
    inputFilter         = new AsciiFilterImporter();
    inputSed            = new AsciiSedImporter();

    tolerence    = 1e-5;
    filterType   = FilterTypes::EUCLID;

  }
  ~SedIntegrationFix() {
    // teardown
    delete sed_integration_ptr;
    delete inputFilter;
//    delete inputSed;
 }

};

//-----------------------------------------------------------------------------

BOOST_AUTO_TEST_SUITE (SedIntegration_test)

// BOOST_GLOBAL_FIXTURE(PV); // this does not work as test case do not have access to PV members!?!?

// BOOST_AUTO_TEST_CASE( constructors_test ) { // this is a test case that do not depend on fixture

//-----------------------------------------------------------------------------

BOOST_FIXTURE_TEST_CASE( Default_constructor_test, SedIntegrationFix ) {
  BOOST_CHECK(sed_integration_ptr);
}



BOOST_FIXTURE_TEST_CASE( Simple_sed_integration_test, SedIntegrationFix ) {

  // the tolerence is expressed in relative difference in percent
  tolerence = 1e-4;

  /*
   * The expected result has been obtained with Python, with the following code
   *
   * # load SED "lePhare/lephare_dev/sed/GAL/CFHTLS_SED/Sbc_cww_13.sed"
   * sed_wave, sed_flux = np.loadtxt(sed_path+'Sbc_cww_13.sed', unpack=True)
   *
   * # interpolate SED template
   * SED = interpolate.interp1d(sed_wave, sed_flux)
   *
   * # integration
   * integration, foo = scipy.integrate.quad(lambda x: SED(x), np.min(sed_wave), np.max(sed_wave))
   *
   * "python_result" below equals to above "integration"
   */
  double python_result = 12206.871644;

  // This is the (large) vector of fluxes from the
  //    "lePhare/lephare_dev/sed/GAL/CFHTLS_SED/Sbc_cww_13.sed"
  vector<double> sed_flux {};

  // The step in the x vector (must be a constant step)
  double x_step = 10;

  // the integration depends only on the x step and the y values
  double actual_result = sed_integration_ptr->simpsonCubicIntegration(x_step, sed_flux);

  // difference between the python and the C++ result is < 3e-5 %
  BOOST_CHECK_CLOSE(python_result, actual_result, tolerence);
}

BOOST_FIXTURE_TEST_CASE( Resample_test, SedIntegrationFix ) {
  /*
   * Here we testing the resample function
   */
  tolerence = 1e-4;

  vector<double> wavelengths   = {3000., 3020., 3030., 3040. ,3060.};
  vector<double> efficiencies = {1., 2., 3., 4., 4.5};

  VectorPair* vectorPairFilter = sed_integration_ptr->resampleFilterSed(wavelengths, efficiencies, 10.);

  vector<double> newFilterWavelengths  = vectorPairFilter->getAxisX();
  vector<double> newFilterEfficiencies = vectorPairFilter->getAxisY();

  // About new wavelengths
  BOOST_CHECK_CLOSE(3010., newFilterWavelengths[1], tolerence);
  BOOST_CHECK_CLOSE(3050., newFilterWavelengths[5], tolerence);
  BOOST_CHECK_CLOSE(3060., newFilterWavelengths[6], tolerence);

  // About new efficiencies
  BOOST_CHECK_CLOSE(1.37784, newFilterEfficiencies[1], tolerence);
  BOOST_CHECK_CLOSE(4.44034, newFilterEfficiencies[5], tolerence);

  delete vectorPairFilter;

}

BOOST_FIXTURE_TEST_CASE( GetMinimumInterval_integration_test, SedIntegrationFix ) {

  BOOST_TEST_MESSAGE("--> Testing the getMinimumInterval function");

  tolerence = 1e-1;

  double expected_result = 5.;

  vector<double> dataVector   = {3000., 3020., 3025., 3040. ,3050.};

  double result = sed_integration_ptr->getMinimumInterval(dataVector);

  BOOST_CHECK_CLOSE(expected_result, result, tolerence);
}

BOOST_FIXTURE_TEST_CASE( ComputeMagnitude_integration_test, SedIntegrationFix ) {

  BOOST_TEST_MESSAGE("--> Testing the computeMagnitude function");

  tolerence = 1e-4;

  vector<double> expected_result = { -48.4756, -49.0302, -47.8374 };

  vector<double> dataFlux   = { 0.9, 1.5, 0.5 };

  vector<double> result = sed_integration_ptr->computeMagnitude(dataFlux);

  BOOST_CHECK_CLOSE(expected_result[0], result[0], tolerence);
  BOOST_CHECK_CLOSE(expected_result[1], result[1], tolerence);
  BOOST_CHECK_CLOSE(expected_result[2], result[2], tolerence);

}

BOOST_AUTO_TEST_SUITE_END ()
