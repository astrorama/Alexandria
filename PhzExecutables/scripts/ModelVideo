#! /usr/bin/env python

import os
import sys
from argparse import ArgumentParser
import matplotlib.pyplot as plt
from matplotlib import animation
from astropy.table import Table

if __name__ == '__main__':
    parser = ArgumentParser(description='Creates a video from given dataset files')
    parser.add_argument("-d", "--directory", help='The directory containing the dataset files', metavar='DIR')
    parser.add_argument("-o", "--out", help='The file to export the videl', metavar='FILE')
    parser.add_argument("-w", "--wavelength_range", nargs=2, type=float, help='Override the wavelength range')
    args = parser.parse_args()
    
    files = os.listdir(args.directory)
    files.sort()
    tables = []
    min_wavelength = sys.float_info.max
    max_wavelength = sys.float_info.min
    min_flux = sys.float_info.max
    max_flux = sys.float_info.min
    for file in files:
        table = Table.read(args.directory+'/'+file,format='ascii')
        min_wavelength = min(min_wavelength, table['Wavelength'].data.min())
        max_wavelength = max(max_wavelength, table['Wavelength'].data.max())
        min_flux = min(min_flux, table['Flux'].data.min())
        max_flux = max(max_flux, table['Flux'].data.max())
        tables.append(table)
    
    fig, axes = plt.subplots()
    axes.title.set_ha('left')
    if args.wavelength_range:
        axes.set_xlim(args.wavelength_range)
    else:
        axes.set_xlim([min_wavelength, max_wavelength])
    axes.set_ylim([min_flux, max_flux])
    sed, = axes.plot([], [])
    
    def initVideo():
        sed.set_data([], [])
    
    def updateVideo(n):
        sed.set_data(tables[n]["Wavelength"].data, tables[n]["Flux"].data)
        axes.title.set_text(files[n])
    
    anim = animation.FuncAnimation(fig, updateVideo, init_func=initVideo, frames=len(tables))
    anim.save(args.out, fps=20, writer="ffmpeg", codec="libx264")
    plt.close(fig)