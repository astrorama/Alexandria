/*
 * Copyright (C) 2012-2020 Euclid Science Ground Segment    
 *  
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free 
 * Software Foundation; either version 3.0 of the License, or (at your option)  
 * any later version.  
 *  
 * This library is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more  
 * details.  
 *  
 * You should have received a copy of the GNU Lesser General Public License 
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  
 */
 
 /**
 * @file SourceCatalog/_impl/Source.icpp
 *
 * Created on: Jan 22, 2014
 *     Author: Pierre Dubath
 */

#include <memory>

#ifdef SOURCE_IMPL

template<typename T>
std::shared_ptr<T> Source::getAttribute() const {
  std::shared_ptr<T> result {};
  // loop over all source attribute
  for (auto attribute_ptr : m_attribute_vector) {
    result = std::dynamic_pointer_cast<T>(attribute_ptr);
    // check whether there is a source attribute that can be successfully casted in Type T
    if (result) {
      break;
    }
  }
  return result;
}


#endif /* SOURCE_IMPL */
